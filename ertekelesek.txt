1. feladat
Az irány jó, de vannak hiányosságok és a dokumentáció erősen minimalisztikus. 
- A dokumentációban jó lett volna legalább felsorolás szinten beletenni az új követelményeket, használati eseteket, mert így nem tudjuk mit nézzünk a modelletekben.
- A 2.3 és 2.4 és fejezetek nem érthetőek jelenlegi formájukban.
- A Passengert a Stakeholders diagramra is fel lehetett volna venni.
- F4.2 és F4.3 lehetett volna külön diagramon.
- P1.1 és F4.3.1.1 között lehetne valamilyen trace összeköttetés.
- Az ajtó záráshoz köthető Safety követelmények jók lettek!
- U1.4.1 inkább funkcionális követelmény.
- A Create route és Set stations használati esetek, nem a Control infrastructure esethez tartoznak szerintem, hanem különálló esetek.
-- Az se világos miért ez a kettő van. A Set stations nem a Create route része? Módosítani, törölni nem lehet?
- Az F4.3.2.1 követelmény jegyekről beszél, ami jó, de akkor miért nem modelleztétek, hogy lehet jegyeket venni, esetleg azokat ellenőrizni is kell?

2. feladat
A lényeges elemel felkerültek, de hiányos és nem minden érthető.
- Remélem ti is érzitek, hogy a dokumentáció nem tölti be a funkcióját: fel kellene sorolni, hogy mit-miért tettetek a modelbe.
- Furcsa, hogy a Main modules BDD-n a containment élekből referencia élek lettek.
- A Scheduling system rendszert egy IBD-n be lehetett volna kötni a meglévő rendszerbe.
- A Scheduling system IBD-jében vannak inkompatibilis portok. Nyugodtan beköthettétek volna a két belső portot arra az egy külső portra, nem kell nested port.
- Ugyanezen IBD-n a schedule manager kiajánl egy ClientPort nevű portot. Ez egy kiajnálás, nem konjugált portnak kellene lennie.
- Smart train controllernek van két portja, ami nincs belső elemhez kötve. Ennek lehet hogy van értelme, de dokumentáció nélkül ezt nem tudom értelmezni.
- A létrehozott blokkoknak jó lett volna létrehozni egy külön packaget.
- Nem látok egy interfészt sem kibontva (metódusok) és signal-t sem hoztatok létre.

3. feladat
A feladat szövege szerint csak az egyik szenzor volt redundáns, nem mindhárom. Egyébként mindegyik feladatot jól oldottátok meg.

4. feladat
a) RequestinRoutes: nem értem a jobb oldalt lévő extra control flowt.
Modifying lines diagramot nagyon furán rendeztétek el, továbbá nem is jó a control flow: Ha az elején a NO irányba megy a control, akkor a joinnál várakozni fog a végtelenségig a folyamat, mert nincs a másik bekötött control flown nem jön token soha. A Validate line lefutásból két control flow indul, ami helyett fork-ot kellene használni (és ahhoz tartozó joint).
Validate lines: a "send signal" események soha nem fognak lefutni, mert nem kapnak control tokent. A data flow csak akkor horoz magában control flow-t, ha van bemeneti control flow és a kimenetén nincs más csak egy dataflow.
b) UML-es diagramot hoztatok létre SysML-es helyett, érdemes figyelni az apróságokra is. (c)-nél ugyanez)
Smart train controller: Van egy nagy állapot, de nincs hozzá kezdő és vég állapot. De a részes sem teljesen specifikáltak, mi történik a "routing" után? A diamond elmek teljesen fölöslegesek és nehezítik a megértést így.
Másik állapotgépben hasonló hibák vannak.
c) Elég minimálisak lettek, ennél azért bonyolultabbakat is ki lehetet volna találni. A "ProcessingRequest"-nél például hol van a request? Mi történik, ha Scheduling Manager megkapja a szükséges információt a Smart Train Controllertől?


5. feladat
Az OpticCabel-t egy kicsit túlzásnak érzem.
A Cloud Server Park, miért a routerbe van bekötve és miért nem a Load Balancerbe? A Load Balancer osztja szét a terhelést a szerverek között. Ez így nem az igazi.
Az allokációt nem értem: a zone aktuátor például a cloudServerParkra van allokálva. Oda a backend feladatokat kellett volna allokálni: Transportation és ami alatta van.
A dokumentáció eléggé minimális.

6. feladat
6.1.: A követelmények analízise kellően alapos, a készített mátrix jól összegzi a követelményeket. Azt viszont nem vizsgáltátok, hogy az adott követelmények ellentmondásmentesek-e.
6.2.: Az első teszteset nem kapcsoltátok követelményhez, pedig egy elég általános dolgot tesztel (RoutePlanner ad kimenetet). 
Nektek most összessen 1 konfigurációtok van, de általánosan a teszteseteknél érdemes ID szerint hivatkozni, hogy egyértelmű legyen. Emellett itt konkrétan kijelölhetőek lettek volna az egyes esetekben az elvárt útvonal/útvonalak szegmensei.
6.3.: Rajzoltatok szekvencia diagramokat, valamint csatoltatok hozzá értelmezést is a dokumentációba, ami jelen esetben szükséges a diagramok értelmezéséhez. Problémák:
* A szekvencia diagramokon nem vettétek figyelembe az egyes interfészeket (adható jelzéseket), és valami saját üzeneteket küldenek a komponensek egymásnak
* Teljesen hiányoznak a tesztkörnyezet leíró modellek és a teszt adattartományok

A feladatot részben sikeresen megoldottátok, kár, hogy az utolsó feladatra (feltehetően) nem maradt elég időtök.
